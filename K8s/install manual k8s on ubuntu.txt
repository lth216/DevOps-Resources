All server

$ sudo apt update && sudo apt -y upgrade
[ -f /var/run/reboot-required ] && sudo reboot -f

$ sudo apt update -y
$ reboot
$ sudo apt -y install curl apt-transport-https
$ curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
$ echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
$ sudo apt update
$ sudo apt -y install vim git curl wget kubelet kubeadm kubectl
$ sudo apt-mark hold kubelet kubeadm kubectl
$ kubectl version --client && kubeadm version
$ sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
$ sudo vim /etc/fstab
$ sudo swapoff -a
$ sudo mount -a
$ free -h
$ sudo modprobe overlay
$ sudo modprobe br_netfilter
$ sudo tee /etc/sysctl.d/kubernetes.conf<<EOF
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
EOF
$ sudo sysctl --system
$ sudo su -
$ OS="xUbuntu_20.04"
$ VERSION=1.27
$ echo "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/ /" > /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
$ echo "deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/$VERSION/$OS/ /" > /etc/apt/sources.list.d/devel:kubic:libcontainers:stable:cri-o:$VERSION.list
$ curl -L https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:$VERSION/$OS/Release.key | apt-key add -
$ curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/Release.key | apt-key add -
$ su - ubuntu
$ sudo apt install cri-o cri-o-runc -y
$ sudo sed -i 's/10.85.0.0/172.24.0.0/g' /etc/cni/net.d/100-crio-bridge.conflist
$ sudo systemctl daemon-reload
$ sudo systemctl restart crio
$ sudo systemctl enable crio
$ sudo systemctl status crio
$ sudo systemctl enable kubelet
$ sudo kubeadm config images pull --cri-socket unix:///var/run/crio/crio.sock
$ sudo sysctl -p

Master
$ sudo kubeadm init --pod-network-cidr=172.24.0.0/16 --cri-socket unix:///var/run/crio/crio.sock
$ mkdir -p $HOME/.kube
$ sudo cp -f /etc/kubernetes/admin.conf $HOME/.kube/config
$ sudo chown $(id -u):$(id -g) $HOME/.kube/config
$ kubectl cluster-info
$ kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.25.1/manifests/tigera-operator.yaml
$ curl https://raw.githubusercontent.com/projectcalico/calico/v3.25.1/manifests/custom-resources.yaml -O
$ sudo nano custom-resources.yaml
$ kubectl create -f custom-resources.yaml
$ kubectl get pods --all-namespaces -w

Node
$ sudo modprobe br_netfilter
$ sudo touch /proc/sys/net/bridge/bridge-nf-call-iptables
$ sudo kubeadm join <IP_Master>:6443 --token ladk36.2l7t4puuvxmv3y08  --discovery-token-ca-cert-hash <hash>

check
$ kubectl get daemonsets calico-node -n kube-system
$ kubectl logs <pod name> -n kube-system
$ kubectl describe pod <pod name> -n kube-system
$ kubectl get replicasets -n kube-system
$ kubectl delete replicaset <replicaset name> -n kube-system
$ kubectl get deployments -n kube-system
$ kubectl delete deployment <deployment name> -n tigera-operator
$ kubectl taint nodes --all node-role.kubernetes.io/master-
$ kubectl taint nodes --all  node-role.kubernetes.io/control-plane-






